name: SWEAgent Auto-Fix

on:
  issues:
    types: [labeled]
  pull_request:
    types: [labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-fix:
    if: |
      ((github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment') &&
      contains(github.event.comment.body, '/auto-fix')
      ) ||

      (github.event_name == 'pull_request_review' &&
      contains(github.event.review.body, '/auto-fix')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          # Handle pull request events first
          if [ -n "${{ github.event.pull_request.number }}" ]; then
            echo "ISSUE_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            echo "ISSUE_TYPE=pr" >> $GITHUB_ENV
          # Handle pull request review events
          elif [ -n "${{ github.event.review.body }}" ]; then
            echo "ISSUE_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            echo "ISSUE_TYPE=pr" >> $GITHUB_ENV
          # Handle issue comment events that reference a PR
          elif [ -n "${{ github.event.issue.pull_request }}" ]; then
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            echo "ISSUE_TYPE=pr" >> $GITHUB_ENV
          # Handle regular issue events
          else
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            echo "ISSUE_TYPE=issue" >> $GITHUB_ENV
          fi

          if [ -n "${{ github.event.review.body }}" ]; then
            echo "COMMENT_ID=${{ github.event.review.id || 'None' }}" >> $GITHUB_ENV
          else
            echo "COMMENT_ID=${{ github.event.comment.id || 'None' }}" >> $GITHUB_ENV
          fi

          # Set branch variables
          echo "TARGET_BRANCH=${{ inputs.target_branch || 'main' }}" >> $GITHUB_ENV

      - name: Comment on issue with start message
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN || github.token }}
          script: |
            const issueType = process.env.ISSUE_TYPE;
            github.rest.issues.createComment({
              issue_number: ${{ env.ISSUE_NUMBER }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[SWE-agent](https://github.com/SWE-agent/SWE-agent) is fixing... [Workflow](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).`
            });
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup SWE-agent from source
        run: |
          git clone https://github.com/SWE-agent/SWE-agent.git
          cd SWE-agent
          python -m pip install --upgrade pip
          pip install --editable .
          cd ..
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Install SWEAgent
        run: pip install sweagent
      - name: Run SWEAgent
        run: |
          sweagent run \
            --agent.model.name=${{ vars.LLM_MODEL || 'openai/gpt-4o-mini' }} \
            --agent.model.per_instance_cost_limit=2.00 \
            --agent.model.max_input_tokens=120000 \
            --agent.model.api_key=${{ secrets.LLM_API_KEY }} \
            --env.repo.path=. \
            --problem_statement.github_url=${{ github.event.issue.html_url }} \
            --actions.open_pr=True \
        env:
          GITHUB_TOKEN: ${{ github.token }}
